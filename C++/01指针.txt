1、指针作函数形参：
	1.1. 每次调用一个函数，都会重新建立一个形参（类似于临时变量），传入的实参作为初始化值拷贝给形参，
		 一旦实参的值拷贝给形参后，形参和实参其实是两个不同的对象了；
		 
	1.2. 当一个函数将指针作为形参时，我们给这个形参传入一个实参（指针（非引用类型）），
		 这个实参的值究竟是什么？其实是指针的地址值，这个地址值传给形参后，后续形参只能操作这个
		 地址值指向的数据结构，跟这个实参（指针（地址本身））无关的；
		 
	1.3. 如果想要改变传入的指针本身（数据结构的地址值），则需要双重指针，例如：
		void Get100Memory(char** p)
		{
			*p = (new char[100]);
		}
		char* str = NULL;
		Get100Memory(&str);
		
	1.4. 函数名 = 指向函数代码的指针（地址）

    
